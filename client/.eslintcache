[{"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/index.js":"1","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/App.js":"2","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Posts/Posts.js":"3","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Form/Form.js":"4","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Posts/Post/Post.js":"5","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/styles.js":"6","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Posts/styles.js":"7","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Form/styles.js":"8","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Posts/Post/styles.js":"9","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/reducers/index.js":"10","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/reducers/posts.js":"11","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/actions/posts.js":"12","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/api/index.js":"13","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/constants/actionTypes.js":"14"},{"size":451,"mtime":1623779870680,"results":"15","hashOfConfig":"16"},{"size":1404,"mtime":1623785776749,"results":"17","hashOfConfig":"16"},{"size":672,"mtime":1623783289690,"results":"18","hashOfConfig":"16"},{"size":2605,"mtime":1623785267161,"results":"19","hashOfConfig":"16"},{"size":1903,"mtime":1623785368722,"results":"20","hashOfConfig":"16"},{"size":458,"mtime":1623785753200,"results":"21","hashOfConfig":"16"},{"size":266,"mtime":1623758560607,"results":"22","hashOfConfig":"16"},{"size":425,"mtime":1623758542463,"results":"23","hashOfConfig":"16"},{"size":963,"mtime":1623758553795,"results":"24","hashOfConfig":"16"},{"size":112,"mtime":1623759760602,"results":"25","hashOfConfig":"16"},{"size":504,"mtime":1623836770961,"results":"26","hashOfConfig":"16"},{"size":1114,"mtime":1623836654839,"results":"27","hashOfConfig":"16"},{"size":380,"mtime":1623838212192,"results":"28","hashOfConfig":"16"},{"size":167,"mtime":1623836654875,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k4cvoo",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/index.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/App.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Posts/Posts.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Form/Form.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Posts/Post/Post.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/styles.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Posts/styles.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Form/styles.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Posts/Post/styles.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/reducers/index.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/reducers/posts.js",["60"],"import {CREATE,LIKE_POST,DELETE,UPDATE,FETCH_ALL,} from \"../constants/actionTypes\";\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload\n    case CREATE:\n      return [...posts, action.payload]\n    case UPDATE:\n    case LIKE_POST:\n      return posts.map((post) => post._id === action.payload._id ? action.payload : post)\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload)\n    default:\n      return posts\n\n  }\n}\n","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/actions/posts.js",["61"],"import * as api from '../api'\nimport {CREATE,DELETE,FETCH_ALL,LIKE_POST,UPDATE} from \"../constants/actionTypes\";\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const {data} = await api.fetchPosts()\n    dispatch({type: 'FETCH_ALL', payload: data})\n  } catch (e) {\n    console.log(e.message)\n  }\n}\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const {data} = await api.createPost(post)\n    dispatch({type: CREATE, payload: data})\n  } catch (e) {\n    console.log(e.message)\n  }\n}\nexport const updatePost = (id,post) => async (dispatch) => {\n  try {\n    const {data} = await api.updatePost(id,post)\n    dispatch({type: UPDATE, payload: data})\n  } catch (e) {\n    console.log(e.message)\n  }\n}\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id)\n    dispatch({type: DELETE, payload: id})\n  } catch (e) {\n    console.log(e.message)\n  }\n}\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const {data} = await api.likePost(id)\n    dispatch({type: LIKE_POST, payload: data})\n  } catch (e) {\n    console.log(e.message)\n  }\n}\n","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/api/index.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/constants/actionTypes.js",[],{"ruleId":"62","severity":1,"message":"63","line":3,"column":1,"nodeType":"64","endLine":18,"endColumn":2},{"ruleId":"65","severity":1,"message":"66","line":2,"column":23,"nodeType":"67","messageId":"68","endLine":2,"endColumn":32},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'FETCH_ALL' is defined but never used.","Identifier","unusedVar"]