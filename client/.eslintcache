[{"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/index.js":"1","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/App.js":"2","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Posts/Posts.js":"3","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Form/Form.js":"4","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Posts/Post/Post.js":"5","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/styles.js":"6","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Posts/styles.js":"7","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Form/styles.js":"8","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Posts/Post/styles.js":"9","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/reducers/index.js":"10","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/reducers/posts.js":"11","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/actions/posts.js":"12","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/api/index.js":"13","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/constants/actionTypes.js":"14","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Navbar/Navbar.js":"15","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Navbar/styles.js":"16","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Home/Home.js":"17","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Auth/Auth.js":"18","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Auth/styles.js":"19","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Auth/Input.js":"20","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Auth/Icon.js":"21","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/reducers/auth.js":"22","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/actions/auth.js":"23","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Pagination.jsx":"24","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Home/styles.js":"25","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/PostDetails/PostDetails.jsx":"26","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/styles.js":"27","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/PostDetails/styles.js":"28","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/PostDetails/CommentSection.jsx":"29"},{"size":451,"mtime":1623779870680,"results":"30","hashOfConfig":"31"},{"size":963,"mtime":1625157579952,"results":"32","hashOfConfig":"31"},{"size":765,"mtime":1625131596575,"results":"33","hashOfConfig":"31"},{"size":2909,"mtime":1625136323601,"results":"34","hashOfConfig":"31"},{"size":3072,"mtime":1625157579964,"results":"35","hashOfConfig":"31"},{"size":458,"mtime":1623785753200,"results":"36","hashOfConfig":"37"},{"size":266,"mtime":1623758560607,"results":"38","hashOfConfig":"31"},{"size":425,"mtime":1623758542463,"results":"39","hashOfConfig":"31"},{"size":1050,"mtime":1625136972700,"results":"40","hashOfConfig":"31"},{"size":146,"mtime":1624635108226,"results":"41","hashOfConfig":"31"},{"size":1432,"mtime":1625143163284,"results":"42","hashOfConfig":"31"},{"size":2251,"mtime":1625157579968,"results":"43","hashOfConfig":"31"},{"size":1046,"mtime":1625141997382,"results":"44","hashOfConfig":"31"},{"size":446,"mtime":1625142496506,"results":"45","hashOfConfig":"31"},{"size":1998,"mtime":1625128868615,"results":"46","hashOfConfig":"31"},{"size":1334,"mtime":1625128956796,"results":"47","hashOfConfig":"31"},{"size":2876,"mtime":1625131792426,"results":"48","hashOfConfig":"31"},{"size":3900,"mtime":1624881781448,"results":"49","hashOfConfig":"31"},{"size":638,"mtime":1624434847137,"results":"50","hashOfConfig":"31"},{"size":902,"mtime":1624634732308,"results":"51","hashOfConfig":"31"},{"size":502,"mtime":1624472093854,"results":"52","hashOfConfig":"31"},{"size":424,"mtime":1624638261405,"results":"53","hashOfConfig":"31"},{"size":558,"mtime":1624646501266,"results":"54","hashOfConfig":"31"},{"size":846,"mtime":1626545142030,"results":"55","hashOfConfig":"31"},{"size":407,"mtime":1624962987754,"results":"56","hashOfConfig":"31"},{"size":3356,"mtime":1626545393018,"results":"57","hashOfConfig":"31"},{"size":133,"mtime":1624962252174,"results":"58","hashOfConfig":"31"},{"size":1633,"mtime":1625157736319,"results":"59","hashOfConfig":"31"},{"size":1893,"mtime":1625151273744,"results":"60","hashOfConfig":"31"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k4cvoo",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5w2fcl",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/index.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/App.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Posts/Posts.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Form/Form.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Posts/Post/Post.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/styles.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Posts/styles.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Form/styles.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Posts/Post/styles.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/reducers/index.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/reducers/posts.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/actions/posts.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/api/index.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/constants/actionTypes.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Navbar/Navbar.js",["122"],"import React, {useState, useEffect} from 'react'\nimport {AppBar, Typography, Toolbar, Avatar, Button} from \"@material-ui/core\";\nimport {useDispatch} from \"react-redux\";\nimport {Link, useHistory, useLocation} from 'react-router-dom'\nimport decode from 'jwt-decode'\nimport memoriesLogo from \"../../images/memories-Logo.png\";\nimport memoriesText from \"../../images/memories-Text.png\";\nimport useStyles from './styles'\n\nconst Navbar = () => {\n  const classes = useStyles()\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const location = useLocation()\n\n  const logout = () => {\n    dispatch({type: 'LOGOUT'})\n    history.push('/')\n    setUser(null)\n  }\n  useEffect(() => {\n    const token = user?.token\n    if (token) {\n      const decodedToken = decode(token)\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout()\n    }\n    setUser(JSON.parse(localStorage.getItem('profile')))\n  }, [location, user?.token])\n  return (\n    <AppBar position='static' color='inherit' className={classes.appBar}>\n      <Link className={classes.brandContainer} to={'/'}>\n        <img src={memoriesText} alt={'icon'} height={'45px'} />\n        <img src={memoriesLogo} alt='icon' height='40px' className={classes.image}/>\n      </Link>\n      <Toolbar className={classes.toolbar}>\n        {user ? (\n          <div className={classes.profile}>\n            <Avatar className={classes.purple} alt={user.result.name}\n                    src={user.result.imageUrl}>{user.result.name.charAt(0)}</Avatar>\n            <Typography className={classes.userName} variant='h6'>{user.result.name}</Typography>\n            <Button variant='contained' className={classes.logout} color='secondary' onClick={logout}>Logout</Button>\n          </div>\n        ) : (\n          <Button component={Link} to='/auth' variant='contained' color='primary'> SignIn</Button>\n        )}\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Navbar\n","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Navbar/styles.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Home/Home.js",["123","124"],"import React, {useEffect, useState} from 'react'\nimport {Container, Paper, Grid, Grow, AppBar, TextField, Button} from \"@material-ui/core\";\nimport {useHistory, useLocation} from 'react-router-dom'\nimport ChipInput from 'material-ui-chip-input'\n\nimport Posts from '../Posts/Posts';\nimport Form from '../Form/Form'\nimport useStyles from \"./styles\";\nimport {useDispatch} from \"react-redux\";\nimport {getPosts, getPostsBySearch} from \"../../actions/posts\";\nimport Pagination from '../Pagination'\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search)\n}\n\nconst Home = () => {\n  const [currentId, setCurrentId] = useState(null)\n  const dispatch = useDispatch()\n  const classes = useStyles()\n  const query = useQuery()\n  const history = useHistory()\n  const page = query.get('page') || 1\n  const searchQuery = query.get('searchQuery')\n  const [search, setSearch] = useState('')\n  const [tags, setTags] = useState([])\n\n\n  const handleKeyPress = (e) => {\n    if (e.charCode === 13) {\n      dispatch(getPostsBySearch({search, tags: tags.join(',')}))\n    }\n  }\n  const handleAdd = (tag) => {\n    setTags([...tags, tag])\n  }\n  const handleDelete = (tagToDelete) => {\n    setTags(tags.filter(tag => tag !== tagToDelete))\n  }\n  const searchPost = () => {\n    if (search.trim() || tags) {\n      dispatch(getPostsBySearch({search, tags: tags.join(',')}))\n      history.push(`/posts/search?searchQuery=${search || 'none'}&tags=${tags.join(',')}`)\n    } else {\n      history.push('/')\n    }\n  }\n  return (\n    <Grow in>\n      <Container maxWidth='xl'>\n        <Grid container justify='space-between' alignItems='stretch' spacing={3} className={classes.gridContainer}>\n          <Grid item xs={12} sm={6} md={9}>\n            <Posts setCurrentId={setCurrentId}/>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <AppBar className={classes.appBarSearch} position={'static'} color={'inherit'}>\n              <TextField name='search' variant={'outlined'} label={'Search Memories'} fullWidth value={search}\n                         onChange={(e) => setSearch(e.target.value)} onKeyPress={handleKeyPress}/>\n              <ChipInput style={{margin: '10px 0'}}\n                         value={tags}\n                         onAdd={handleAdd} onDelete={handleDelete} label={'Search Tags'} variant={'outlined'}\n              />\n              <Button onClick={searchPost} className={classes.searchButton} color={'primary'}\n                      variant={'contained'}>Search</Button>\n            </AppBar>\n            <Form currentId={currentId} setCurrentId={setCurrentId}/>\n            {(!searchQuery && !tags.length) && (\n              <Paper elevation={6} className={classes.pagination}>\n                <Pagination page={page}/>\n              </Paper>\n            )}\n          </Grid>\n        </Grid>\n      </Container>\n    </Grow>\n  )\n}\n\nexport default Home\n","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Auth/Auth.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Auth/styles.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Auth/Input.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Auth/Icon.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/reducers/auth.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/actions/auth.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Pagination.jsx",["125"],"import React, {useEffect} from 'react'\nimport {Pagination, PaginationItem} from \"@material-ui/lab\";\nimport {Link} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport useStyles from './styles'\nimport {getPosts} from \"../actions/posts\";\n\nconst Paginate = ({page}) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const {numberOfPages} = useSelector((state) => state.posts)\n\n  useEffect(() => {\n    if (page) {\n      dispatch(getPosts(page))\n    }\n  }, [page])\n\n  return (\n    <Pagination\n      classes={{ul: classes.ul}}\n      count={numberOfPages}\n      page={Number(page) || 1}\n      variant={\"outlined\"}\n      color={'primary'}\n      renderItem={(item) => (\n        <PaginationItem {...item} component={Link} to={`/home?page=${item.page}`}/>\n      )}\n    />\n  )\n}\n\nexport default Paginate\n","/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/Home/styles.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/PostDetails/PostDetails.jsx",["126","127","128"],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/styles.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/PostDetails/styles.js",[],"/home/adanic/Desktop/Hamed's_Projects/Memories/client/src/components/PostDetails/CommentSection.jsx",[],{"ruleId":"129","severity":1,"message":"130","line":29,"column":6,"nodeType":"131","endLine":29,"endColumn":29,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":1,"column":16,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"137","line":10,"column":9,"nodeType":"135","messageId":"136","endLine":10,"endColumn":17},{"ruleId":"129","severity":1,"message":"138","line":18,"column":6,"nodeType":"131","endLine":18,"endColumn":12,"suggestions":"139"},{"ruleId":"129","severity":1,"message":"138","line":19,"column":6,"nodeType":"131","endLine":19,"endColumn":10,"suggestions":"140"},{"ruleId":"129","severity":1,"message":"138","line":23,"column":6,"nodeType":"131","endLine":23,"endColumn":12,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":72,"column":17,"nodeType":"144","endLine":72,"endColumn":58},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'logout'. Either include it or remove the dependency array.","ArrayExpression",["145"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getPosts' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["146"],["147"],["148"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"157","text":"158"},"Update the dependencies array to be: [dispatch, page]",{"range":"159","text":"160"},"Update the dependencies array to be: [dispatch, id]",{"range":"161","text":"162"},"Update the dependencies array to be: [dispatch, post]",{"range":"163","text":"164"},[990,1013],"[location, logout, user?.token]",[506,512],"[dispatch, page]",[673,677],"[dispatch, id]",[797,803],"[dispatch, post]"]